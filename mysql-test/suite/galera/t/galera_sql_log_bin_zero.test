#
# Test SET SESSION sql_log_bin = 0 . We expect that even with this settings
# replication across PXC nodes will take place.
#

--source include/galera_cluster.inc

CREATE TABLE t1 (f1 INTEGER) ENGINE=InnoDB;

SET SESSION sql_log_bin = 0;

CREATE TABLE t2 (f1 INTEGER) ENGINE=InnoDB;

INSERT INTO t1 VALUES (1);

CREATE USER 'demo'@'localhost' IDENTIFIED BY 's3kr3t';

# PXC-2992
CREATE COMPRESSION_DICTIONARY numbers('');
CREATE TABLE t3(id INT,a BLOB COLUMN_FORMAT COMPRESSED WITH COMPRESSION_DICTIONARY numbers);
INSERT INTO t3 VALUES(1, "abc");

SET SESSION sql_log_bin = 1;

INSERT INTO t1 VALUES (2);

SELECT @@global.gtid_executed;

--connection node_2
SELECT COUNT(*) = 2 FROM t1;
SELECT COUNT(*) = 1 FROM t1 WHERE f1 = 1;
SHOW TABLES;

# avoid SHOW CREATE USER as it will show hashed password with will do mess with
# results file
--let $assert_text = demo@localhost user should be replicated to node_2
--let $assert_cond = COUNT(*) = 1 FROM mysql.user WHERE User="demo" AND host="localhost"
--source include/assert.inc

--connection node_2
DROP TABLE t1;
SET SESSION sql_log_bin = 0;
DROP TABLE t2;
DROP TABLE t3;
DROP COMPRESSION_DICTIONARY numbers;
DROP USER 'demo'@'localhost';
SET SESSION sql_log_bin = 1;

#-------------------------------------------------------------------------------
#
# Setting sql_log_bin = 0 should not block DDL/MDL across PXC cluser (PXC-3464)
#

--connection node_1
USE test;
CREATE TABLE t (i INT, PRIMARY KEY pk(i)) ENGINE=InnoDB;
INSERT INTO t VALUES (1);
SET sql_log_bin=0;
ALTER TABLE t ADD COLUMN j int;
OPTIMIZE TABLE t;
ANALYZE TABLE t;
REPAIR TABLE t;
SET sql_log_bin=1;
SET sql_log_bin=0;
INSERT INTO t VALUES (2, 2);
SET sql_log_bin=1;
SELECT * FROM t;

--connection node_2
USE test;
SELECT * FROM t;
DROP TABLE t;
